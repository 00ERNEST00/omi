{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/we-element.js","../src/json-diff.js","../src/render.js","../src/define.js","../src/options.js","../src/tag.js","../src/omi.js"],"names":["VNode","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","undefined","String","p","key","options","vnode","cssToDom","css","node","document","createElement","innerText","npn","str","replace","$","$1","toUpperCase","applyRef","ref","value","current","isArray","obj","Object","prototype","toString","call","nProps","props","result","keys","forEach","isSameNodeType","hydrating","_componentConstructor","removeNode","name","isSvg","className","old","style","cssText","IS_NON_DIMENSIONAL","test","innerHTML","__html","useCapture","substring","addEventListener","eventProxy","e","removeAttribute","ns","removeAttributeNS","toLowerCase","setAttribute","isSvgMode","dom","componentRoot","context","mountAll","ret","idiff","diffLevel","parent","out","splitText","parentNode","_component","nodeValue","createTextNode","replaceChild","recollectNodeTree","vnodeName","createNode","vchildren","firstChild","fc","a","nextSibling","innerDiffNode","dangerouslySetInnerHTML","prevSvgMode","min","len","childrenLen","vlen","j","keyedLen","originalChildren","keyed","vchild","_child","__key","trim","isHydrating","c","f","appendChild","unmountOnly","removeChildren","update","attrs","setAccessor","isWeElement","_possibleConstructorReturn","self","ReferenceError","HTMLElement","ARRAYTYPE","type","syncKeys","pre","_diff","rootPreType","currentValue","rootCurrentType","item","index","setResult","path","OBJECTTYPE","preValue","currentType","subKey","k","v","diff","execTask","deadline","list","store","timeRemaining","setTimeout","querySelector","instances","originData","JSON","parse","stringify","data","render","extendStoreUpate","this","diffResult","diff$1","globalData","instance","jsonDiff","onChange","updateAll","matchGlobalData","updateByPath","indexOf","keyA","needUpdate","includePath","updatePath","keyB","pathA","pathB","next","substr","arr","split","origin","ctor","pure","dataToPath","getUpdatePath","_objToPath","_arrayToPath","target","define","root","global","Math","Array","window","Reflect","customElements","hasOwnProperty","BuiltInHTMLElement","construct","constructor","setPrototypeOf","requestIdleCallback","cb","start","Date","now","didTimeout","max","cancelIdleCallback","id","clearTimeout","Promise","resolve","then","bind","_listeners","WeElement","_this","install","shadowRoot","attachShadow","mode","installed","disconnectedCallback","uninstall","splice","beforeUpdate","host","fire","afterUpdate","CustomEvent","detail","tick","Omi","tag","h"],"mappings":"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","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\nconst EMPTY_CHILDREN = []\n\nexport function h(nodeName, attributes) {\n\tlet children = EMPTY_CHILDREN, lastSimple, child, simple, i\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i])\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children)\n\t\tdelete attributes.children\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) stack.push(child[i])\n\t\t}\n\t\telse {\n\t\t\tif (typeof child === 'boolean') child = null\n\n\t\t\tif ((simple = typeof nodeName !== 'function')) {\n\t\t\t\tif (child == null) child = ''\n\t\t\t\telse if (typeof child === 'number') child = String(child)\n\t\t\t\telse if (typeof child !== 'string') simple = false\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child\n\t\t\t}\n\t\t\telse if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child]\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child)\n\t\t\t}\n\n\t\t\tlastSimple = simple\n\t\t}\n\t}\n\n\tlet p = new VNode()\n\tp.nodeName = nodeName\n\tp.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n\tp.key = attributes == null ? undefined : attributes.key\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p)\n\n\treturn p\n}","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n(function() {\n\tif (\n\t// No Reflect, no classes, no need for shim because native custom elements\n\t// require ES2015 classes or Reflect.\n\t\twindow.Reflect === undefined ||\n      window.customElements === undefined ||\n      // The webcomponentsjs custom elements polyfill doesn't require\n      // ES2015-compatible construction (`super()` or `Reflect.construct`).\n      window.customElements.hasOwnProperty('polyfillWrapFlushCallback')\n\t) {\n\t\treturn\n\t}\n\tconst BuiltInHTMLElement = HTMLElement\n\twindow.HTMLElement = function HTMLElement() {\n\t\treturn Reflect.construct(BuiltInHTMLElement, [], this.constructor)\n\t}\n\tHTMLElement.prototype = BuiltInHTMLElement.prototype\n\tHTMLElement.prototype.constructor = HTMLElement\n\tObject.setPrototypeOf(HTMLElement, BuiltInHTMLElement)\n})()\n\n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n\tfunction (cb) {\n\t\treturn setTimeout(function () {\n\t\t\tvar start = Date.now();\n\t\t\tcb({\n\t\t\t\tdidTimeout: false,\n\t\t\t\ttimeRemaining: function () {\n\t\t\t\t\treturn Math.max(0, 50 - (Date.now() - start));\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1);\n\t}\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n\tfunction (id) {\n\t\tclearTimeout(id);\n\t} \n\nexport function cssToDom(css) {\n\tconst node = document.createElement('style')\n\tnode.innerText = css\n\treturn node\n}\n\n\nexport function npn(str) {\n\treturn str.replace(/-(\\w)/g, ($, $1) => {\n\t\treturn $1.toUpperCase()\n\t})\n}\n\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i]\n\treturn obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value)\n\t\telse ref.current = value\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout\n\nexport function isArray(obj){\n\treturn Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props){\n\tif (!props || isArray(props)) return {}\n\tconst result = {}\n\tObject.keys(props).forEach(key =>{\n\t\tresult[key] = props[key].value\n\t})\n\treturn result\n}\n","import { extend } from '../util'\n\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase()\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes)\n\tprops.children = vnode.children\n\n\tlet defaultProps = vnode.nodeName.defaultProps\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName)\n\tnode.normalizedNodeName = nodeName\n\treturn node\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode\n\tif (parentNode) parentNode.removeChild(node)\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class'\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null)\n\t\tapplyRef(value, node)\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || ''\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || ''\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = ''\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i]\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || ''\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''))\n\t\tname = name.toLowerCase().substring(2)\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture)\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture)\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name)\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')))\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase())\n\t\t\telse node.removeAttribute(name)\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\tif (ns) {\n\t\t\t\tnode.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value)\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e)\n}","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { createNode, setAccessor } from '../dom/index'\nimport {  npn } from '../util'\nimport { removeNode } from '../dom/index'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom)\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot)\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret)\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\t\n\t}\n\n\treturn ret\n}\n\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = ''\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode)\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\t\t\t\trecollectNodeTree(dom, true)\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true\n\n\t\treturn out\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName\n\t\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName)\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode)\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild)\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true)\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {}\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0]\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null)\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props)\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode\n\n\treturn out\n}\n\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++\n\t\t\t\tkeyed[key] = child\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i]\n\t\t\tchild = null\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key]\n\t\t\t\t\tkeyed[key] = undefined\n\t\t\t\t\tkeyedLen--\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c\n\t\t\t\t\t\tchildren[j] = undefined\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--\n\t\t\t\t\t\tif (j===min) min++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll)\n\n\t\t\tf = originalChildren[i]\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child)\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false)\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false)\n\t}\n}\n\n\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\t\n\t// If the node's VNode had a ref function, invoke it with null here.\n\t// (this is part of the React spec, and smart for unsetting references)\n\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\n\n\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\tremoveNode(node)\n\t}\n\n\tremoveChildren(node)\n\n}\n\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild\n\twhile (node) {\n\t\tlet next = node.previousSibling\n\t\trecollectNodeTree(node, true)\n\t\tnode = next\n\t}\n}\n\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name\n\tlet update  = false\n\tlet isWeElement = dom.update\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode)\n\t\t\tif (isWeElement){\n\t\t\t\tdelete dom.props[name]\n\t\t\t\tupdate = true\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\t//diable when using store system?\n\t\t//!dom.store &&\n\t\tif (isWeElement && typeof attrs[name] === 'object'){\n\t\t\tdom.props[npn(name)] = attrs[name]\n\t\t\tupdate = true\n\t\t} else if (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode)\n\t\t\tif (isWeElement) {\n\t\t\t\tdom.props[npn(name)] = attrs[name]\n\t\t\t\tupdate = true\n\t\t\t}\n\t\t}\n\t}\n\t\n\t(dom.parentNode && update && isWeElement) && dom.update()\n}\n","import { cssToDom, nProps } from './util'\nimport { diff } from './vdom/diff'\n\nexport default class WeElement extends HTMLElement {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.props =  nProps(this.constructor.props)\n\t\tthis.data = this.constructor.data || {}\n\t}\n\n\tconnectedCallback() {\n\t\tif (!this.constructor.pure) {\n\t\t\tlet p = this.parentNode\n\t\t\twhile (p && !this.store) {\n\t\t\t\tthis.store = p.store\n\t\t\t\tp = p.parentNode || p.host\n\t\t\t}\n\t\t\tif (this.store) {\n\t\t\t\tthis.store.instances.push(this)\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.install()\n        \n\t\tconst shadowRoot = this.attachShadow({ mode: 'open' })\n\n\t\tthis.css && shadowRoot.appendChild(cssToDom(this.css()))\n\t\tthis.host = diff(null, this.render(this.props, (!this.constructor.pure && this.store) ? this.store.data : this.data), {}, false, null, false)\n\t\tshadowRoot.appendChild(this.host)\n\n\t\tthis.installed()\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.uninstall()\n\t\tif (this.store) {\n\t\t\tfor (let i = 0, len = this.store.instances.length; i < len; i++) {\n\t\t\t\tif (this.store.instances[i] === this) {\n\t\t\t\t\tthis.store.instances.splice(i, 1)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.beforeUpdate()\n\t\tdiff(this.host, this.render(this.props, (!this.constructor.pure && this.store) ? this.store.data : this.data))\n\t\tthis.afterUpdate()\n\t}\n\n\tfire(name, data){\n\t\tthis.dispatchEvent(new CustomEvent(name, { detail : data }))\n\t}\n\n\tinstall() {\n\n\t}\n\n\tinstalled() {\n\n\t}\n\n\tuninstall() {\n\n\t}\n\n\tbeforeUpdate() {\n\n\t}\n\n\tafterUpdate() {\n\n\t}\n}","const ARRAYTYPE = '[object Array]'\nconst OBJECTTYPE = '[object Object]'\nconst FUNCTIONTYPE = '[object Function]'\n\nexport default function diff(current, pre) {\n    const result = {}\n    syncKeys(current, pre)\n    _diff(current, pre, '', result)\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) return\n    const rootCurrentType = type(current)\n    const rootPreType = type(pre)\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (let key in pre) {\n                const currentValue = current[key]\n                if (currentValue === undefined) {\n                    current[key] = null\n                } else {\n                    syncKeys(currentValue, pre[key])\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach((item, index) => {\n                syncKeys(current[index], item)\n            })\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) return\n    const rootCurrentType = type(current)\n    const rootPreType = type(pre)\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current)\n        } else {\n            for (let key in current) {\n                const currentValue = current[key]\n                const preValue = pre[key]\n                const currentType = type(currentValue)\n                const preType = type(preValue)\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\n                        } else {\n                            currentValue.forEach((item, index) => {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result)\n                            })\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\n                    } else {\n                        for (let subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result)\n                        }\n                    }\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current)\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current)\n            } else {\n                current.forEach((item, index) => {\n                    _diff(item, pre[index], path + '[' + index + ']', result)\n                })\n            }\n        }\n    } else {\n        setResult(result, path, current)\n    }\n}\n\nfunction setResult(result, k, v) {\n    if (type(v) != FUNCTIONTYPE) {\n        result[k] = v\n    }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}","import { diff } from './vdom/diff'\nimport jsonDiff from './json-diff'\n\nconst list = []\nlet tick = false\n\nexport function render(vnode, parent, store) {\n\tparent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\tif(store){\n\t\tstore.instances = []\n\t\textendStoreUpate(store)\n\t\tstore.originData = JSON.parse(JSON.stringify(store.data))\t\n    }\n    parent.store = store\n    diff(null, vnode, {}, false, parent, false)\n    list.push(store)\n\n    if(store && !tick){\n        requestIdleCallback(execTask)\n        tick = true\n    }\n      \n    function execTask(deadline){\n        while (deadline.timeRemaining() > 0){\n            list.forEach(currentStore => {\n                currentStore.update()\n            })\n        }\n        setTimeout(function(){\n            requestIdleCallback(execTask)\n        },200)\n        \n    }\n} \n\nfunction extendStoreUpate(store){\n\tstore.update = function(){\n\t\tlet diffResult = jsonDiff(this.data, this.originData)\n\t\tif (Object.keys(diffResult)[0] == '') {\n\t\t\tdiffResult = diffResult['']\n\t\t}\n\t\tconst updateAll = matchGlobalData(this.globalData, diffResult)\n\t\tif (Object.keys(diffResult).length > 0) {\n\t\t\tthis.instances.forEach(instance => {\n\t\t\t\tif(updateAll || this.updateAll || instance.constructor.updatePath && needUpdate(diffResult, instance.constructor.updatePath)){\n\t\t\t\t\tinstance.update()\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.onChange && this.onChange(diffResult)\n\t\t\tfor (let key in diffResult) {\n\t\t\t\tupdateByPath(this.originData, key, typeof diffResult[key] === 'object' ? JSON.parse(JSON.stringify(diffResult[key])) : diffResult[key])\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction matchGlobalData(globalData, diffResult) {\n\tif(!globalData) return false\n    for (let keyA in diffResult) {\n        if (globalData.indexOf(keyA) > -1) {\n            return true\n        }\n        for (let i = 0, len = globalData.length; i < len; i++) {\n            if (includePath(keyA, globalData[i])) {\n                return true\n            }\n        }\n    }\n    return false\n}\n//todo path级别检测包括Array，如果array为空数组，默认值在install里加\nfunction needUpdate(diffResult, updatePath){\n    for(let keyA in diffResult){\n        if(updatePath[keyA]){\n            return true\n        }\n        for(let keyB in updatePath){\n            if(includePath(keyA, keyB)){\n                return true\n            }\n        }\n    }\n    return false\n}\n\nfunction includePath(pathA, pathB){\n    if(pathA.indexOf(pathB)===0){\n        const next = pathA.substr(pathB.length, 1)\n        if(next === '['||next === '.'){\n            return true\n        }\n    }\n    return false\n}\n\nfunction updateByPath(origin, path, value) {\n    const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n    let current = origin\n    for (let i = 0, len = arr.length; i < len; i++) {\n        if (i === len - 1) {\n            current[arr[i]] = value\n        } else {\n            current = current[arr[i]]\n        }\n    }\n}","const OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n\tcustomElements.define(name, ctor)\n\tif (ctor.data && !ctor.pure) {\n\t\tctor.updatePath = getUpdatePath(ctor.data)\n\t}\n}\n\nexport function getUpdatePath(data) {\n\tconst result = {}\n\tdataToPath(data, result)\n\treturn result\n}\n\nfunction dataToPath(data, result) {\n\tObject.keys(data).forEach(key => {\n\t\tresult[key] = true\n\t\tconst type = Object.prototype.toString.call(data[key])\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(data[key], key, result)\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(data[key], key, result)\n\t\t}\n\t})\n}\n\nfunction _objToPath(data, path, result) {\n\tObject.keys(data).forEach(key => {\n\t\tresult[path + '.' + key] = true\n\t\tdelete result[path]\n\t\tconst type = Object.prototype.toString.call(data[key])\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(data[key], path + '.' + key, result)\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(data[key], path + '.' + key, result)\n\t\t}\n\t})\n}\n\nfunction _arrayToPath(data, path, result) {\n\tdata.forEach((item, index) => {\n\t\tresult[path + '[' + index + ']'] = true\n\t\tdelete result[path]\n\t\tconst type = Object.prototype.toString.call(item)\n\t\tif (type === OBJECTTYPE) {\n\t\t\t_objToPath(item, path + '[' + index + ']', result)\n\t\t} else if (type === ARRAYTYPE) {\n\t\t\t_arrayToPath(item, path + '[' + index + ']', result)\n\t\t}\n\t})\n}","function getGlobal() {\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t} else if (typeof global !== 'undefined') {\n\t\t\treturn global\n\t\t}\n\t\treturn (function(){\n\t\t\treturn this\n\t\t})()\n\t\t\n\t}\n\treturn global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n\t\n\troot: getGlobal()\n\t//componentChange(component, element) { },\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@name syncComponentUpdates\n\t *\t@type Boolean\n\t *\t@default true\n\t */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t//afterMount(component) { },\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t//afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n}\n","import { define } from './define'\n\nexport function tag(name, pure) {\n\treturn function (target) {\n\t\ttarget.pure = pure\n\t\tdefine(name, target)\n\t}\n}","import { h, h as createElement } from './h'\nimport options from './options'\nimport WeElement from  './we-element'\nimport { render } from './render'\nimport { define } from './define'\nimport { tag } from './tag'\n\noptions.root.Omi = {\n\ttag,\n\tWeElement,\n\trender,\n\th,\n\tcreateElement,\n\toptions,\n\tdefine\n}\n\noptions.root.Omi.version = '4.0.1'\n\nexport default {\n\ttag,\n\tWeElement,\n\trender,\n\th,\n\tcreateElement,\n\toptions,\n\tdefine\n}\n\nexport {\n\ttag,\n\tWeElement,\n\trender,\n\th,\n\tcreateElement,\n\toptions,\n\tdefine\n}\n"]}