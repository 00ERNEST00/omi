{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/we-element.js","../src/options.js","../src/render.js","../src/omi.js"],"names":["VNode","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","key","options","vnode","vdToDom","vd","dom","document","createElement","Object","keys","forEach","setAttribute","bind","n","appendChild","createTextNode","onClick","onclick","cssToDom","css","node","innerText","npn","str","replace","$","$1","toUpperCase","isSameNodeType","hydrating","_componentConstructor","normalizedNodeName","cssText","cssTxt","style","a","parseCSSText","rule","_ref","properties","split","map","o","match","slice","x","trim","Array","isArray","Symbol","iterator","_ref3","next","done","value","_ref2","property","s","parentNode","name","isSvg","old","className","IS_NON_DIMENSIONAL","test","currentJson","oldJson","result","changed","ckey","setStyles","innerHTML","__html","useCapture","substring","addEventListener","eventProxy","removeEventListener","removeAttribute","_listeners","ns","setProperty","removeAttributeNS","toLowerCase","this","e","type","event","flushMounts","afterMount","c","componentDidMount","installed","isSvgMode","context","mountAll","ret","idiff","componentRoot","diffLevel","out","splitText","_component","nodeValue","replaceChild","recollectNodeTree","vnodeName","createNode","props","t","vchildren","firstChild","fc","nextSibling","innerDiffNode","dangerouslySetInnerHTML","prevSvgMode","min","len","childrenLen","vlen","j","keyedLen","originalChildren","keyed","vchild","_child","__key","isHydrating","f","removeNode","unmountOnly","ref","removeChildren","diffAttributes","attrs","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","HTMLElement","scopedStyle","$store","isWeb","staticStyleMapping","doc","root","global","Math","window","styleCache","Reflect","customElements","hasOwnProperty","BuiltInHTMLElement","construct","constructor","prototype","setPrototypeOf","usePromise","Promise","__config__","platform","systemVersion","resolve","then","setTimeout","mounts","WeElement","_this","data","connectedCallback","_this2","install","getAttribute","names","shadowRoot","attachShadow","mode","_css","current","update","disconnectedCallback","diff","uninstall","render","parent","Omi","h","version","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\r\nexport function VNode() {}\r\n","import { VNode } from './vnode';\r\nimport options from './options';\r\n\r\n\r\nconst stack = [];\r\n\r\nconst EMPTY_CHILDREN = [];\r\n\r\nexport function h(nodeName, attributes) {\r\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\r\n\tfor (i=arguments.length; i-- > 2; ) {\r\n\t\tstack.push(arguments[i]);\r\n\t}\r\n\tif (attributes && attributes.children!=null) {\r\n\t\tif (!stack.length) stack.push(attributes.children);\r\n\t\tdelete attributes.children;\r\n\t}\r\n\twhile (stack.length) {\r\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\r\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (typeof child==='boolean') child = null;\r\n\r\n\t\t\tif ((simple = typeof nodeName!=='function')) {\r\n\t\t\t\tif (child==null) child = '';\r\n\t\t\t\telse if (typeof child==='number') child = String(child);\r\n\t\t\t\telse if (typeof child!=='string') simple = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (simple && lastSimple) {\r\n\t\t\t\tchildren[children.length-1] += child;\r\n\t\t\t}\r\n\t\t\telse if (children===EMPTY_CHILDREN) {\r\n\t\t\t\tchildren = [child];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchildren.push(child);\r\n\t\t\t}\r\n\r\n\t\t\tlastSimple = simple;\r\n\t\t}\r\n\t}\r\n\r\n\tlet p = new VNode();\r\n\tp.nodeName = nodeName;\r\n\tp.children = children;\r\n\tp.attributes = attributes==null ? undefined : attributes;\r\n\tp.key = attributes==null ? undefined : attributes.key;\r\n\r\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\r\n\tif (options.vnode!==undefined) options.vnode(p);\r\n\r\n\treturn p;\r\n}","/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n/**\r\n * This shim allows elements written in, or compiled to, ES5 to work on native\r\n * implementations of Custom Elements v1. It sets new.target to the value of\r\n * this.constructor so that the native HTMLElement constructor can access the\r\n * current under-construction element's definition.\r\n */\r\n(function() {\r\n    if (\r\n      // No Reflect, no classes, no need for shim because native custom elements\r\n      // require ES2015 classes or Reflect.\r\n      window.Reflect === undefined ||\r\n      window.customElements === undefined ||\r\n      // The webcomponentsjs custom elements polyfill doesn't require\r\n      // ES2015-compatible construction (`super()` or `Reflect.construct`).\r\n      window.customElements.hasOwnProperty('polyfillWrapFlushCallback')\r\n    ) {\r\n      return;\r\n    }\r\n    const BuiltInHTMLElement = HTMLElement;\r\n    window.HTMLElement = function HTMLElement() {\r\n      return Reflect.construct(BuiltInHTMLElement, [], this.constructor);\r\n    };\r\n    HTMLElement.prototype = BuiltInHTMLElement.prototype;\r\n    HTMLElement.prototype.constructor = HTMLElement;\r\n    Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\r\n  })();\r\n\r\nexport function vdToDom(vd) {\r\n    if(vd){\r\n    if (vd.nodeName) {\r\n        const dom = document.createElement(vd.nodeName)\r\n        Object.keys(vd.attributes).forEach(key=>{\r\n            dom.setAttribute(key,vd.attributes[key])\r\n        })\r\n        bind(vd, dom)\r\n        vd.children && vd.children.forEach(child => {\r\n            const n = vdToDom(child)\r\n            n&&dom.appendChild(n)\r\n        })\r\n        return dom\r\n    } else {\r\n        return document.createTextNode(vd)\r\n    }\r\n}\r\n}\r\n\r\nfunction bind(vd, dom) {\r\n    if (vd.attributes.onClick) {\r\n        \r\n        dom.onclick = vd.attributes.onClick\r\n    }\r\n}\r\n\r\n\r\nexport function cssToDom(css) {\r\n    const node = document.createElement('style')\r\n    node.innerText = css\r\n    return node\r\n}\r\n\r\n\r\nexport function npn(str) {\r\n    return str.replace(/-(\\w)/g, function ($, $1) {\r\n        return $1.toUpperCase();\r\n    });\r\n}\r\n\r\n/**\r\n *  Copy all properties from `props` onto `obj`.\r\n *  @param {Object} obj\t\tObject onto which properties should be copied.\r\n *  @param {Object} props\tObject from which to copy properties.\r\n *  @returns obj\r\n *  @private\r\n */\r\nexport function extend(obj, props) {\r\n\tfor (let i in props) obj[i] = props[i];\r\n\treturn obj;\r\n}\r\n\r\n/**\r\n * Call a function asynchronously, as soon as possible. Makes\r\n * use of HTML Promise to schedule the callback if available,\r\n * otherwise falling back to `setTimeout` (mainly for IE<11).\r\n *\r\n * @param {Function} callback\r\n */\r\n\r\nlet usePromise = typeof Promise == 'function';\r\n\r\n// for native\r\nif (typeof document !== 'object' && typeof global !== 'undefined' && global.__config__) {\r\n\tif (global.__config__.platform === 'android') {\r\n\t\tusePromise = true;\r\n\t} else {\r\n\t\tlet systemVersion = global.__config__.systemVersion && global.__config__.systemVersion.split('.')[0] || 0;\r\n\t\tif (systemVersion > 8) {\r\n\t\t\tusePromise = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const defer = usePromise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\r\n","import { extend } from '../util';\r\n\r\n\r\n/**\r\n * Check if two nodes are equivalent.\r\n *\r\n * @param {Node} node\t\t\tDOM Node to compare\r\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\r\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\r\n * @private\r\n */\r\nexport function isSameNodeType(node, vnode, hydrating) {\r\n\tif (typeof vnode==='string' || typeof vnode==='number') {\r\n\t\treturn node.splitText!==undefined;\r\n\t}\r\n\tif (typeof vnode.nodeName==='string') {\r\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\r\n\t}\r\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\r\n}\r\n\r\n\r\n/**\r\n * Check if an Element has a given nodeName, case-insensitively.\r\n *\r\n * @param {Element} node\tA DOM Element to inspect the name of.\r\n * @param {String} nodeName\tUnnormalized name to compare against.\r\n */\r\nexport function isNamedNode(node, nodeName) {\r\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\r\n}\r\n\r\n\r\n/**\r\n * Reconstruct Component-style `props` from a VNode.\r\n * Ensures default/fallback values from `defaultProps`:\r\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\r\n *\r\n * @param {VNode} vnode\r\n * @returns {Object} props\r\n */\r\nexport function getNodeProps(vnode) {\r\n\tlet props = extend({}, vnode.attributes);\r\n\tprops.children = vnode.children;\r\n\r\n\tlet defaultProps = vnode.nodeName.defaultProps;\r\n\tif (defaultProps!==undefined) {\r\n\t\tfor (let i in defaultProps) {\r\n\t\t\tif (props[i]===undefined) {\r\n\t\t\t\tprops[i] = defaultProps[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn props;\r\n}\r\n","import { IS_NON_DIMENSIONAL } from '../constants';\r\nimport options from '../options';\r\n\r\n\r\n/** Create an element with the given nodeName.\r\n *\t@param {String} nodeName\r\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\r\n *\t@returns {Element} node\r\n */\r\nexport function createNode(nodeName, isSvg) {\r\n\tlet node = isSvg ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName) : options.doc.createElement(nodeName);\r\n\tnode.normalizedNodeName = nodeName;\r\n\treturn node;\r\n}\r\n\r\nfunction parseCSSText(cssText) {\r\n\tlet cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, \" \").replace(/\\s+/g, \" \");\r\n\tlet style = {}, [a,b,rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/)||[a,b,cssTxt];\r\n\tlet cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase());\r\n\tlet properties = rule.split(\";\").map(o => o.split(\":\").map(x => x && x.trim()));\r\n\tfor (let [property, value] of properties) style[cssToJs(property)] = value;\r\n\treturn style;\r\n}\r\n\r\n/** Remove a child node from its parent if attached.\r\n *\t@param {Element} node\t\tThe node to remove\r\n */\r\nexport function removeNode(node) {\r\n\tlet parentNode = node.parentNode;\r\n\tif (parentNode) parentNode.removeChild(node);\r\n}\r\n\r\n\r\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\r\n *\tIf `value` is `null`, the attribute/handler will be removed.\r\n *\t@param {Element} node\tAn element to mutate\r\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\r\n *\t@param {any} old\tThe last value that was set for this name/node pair\r\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\r\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\r\n *\t@private\r\n */\r\nexport function setAccessor(node, name, old, value, isSvg) {\r\n\tif (name==='className') name = 'class';\r\n\r\n\r\n\tif (name==='key') {\r\n\t\t// ignore\r\n\t}\r\n\telse if (name==='ref') {\r\n\t\tif (old) old(null);\r\n\t\tif (value) value(node);\r\n\t}\r\n\telse if (name==='class' && !isSvg) {\r\n\t\tnode.className = value || '';\r\n\t}\r\n\telse if (name==='style') {\r\n\t\tif (options.isWeb) {\r\n\t\t\tif (!value || typeof value==='string' || typeof old==='string') {\r\n\t\t\t\tnode.style.cssText = value || '';\r\n\t\t\t}\r\n\t\t\tif (value && typeof value==='object') {\r\n\t\t\t\tif (typeof old!=='string') {\r\n\t\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i in value) {\r\n\t\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet oldJson = old,\r\n\t\t\t\tcurrentJson = value;\r\n\t\t\tif (typeof old === 'string') {\r\n\t\t\t\toldJson = parseCSSText(old);\r\n\t\t\t}\r\n\t\t\tif (typeof value == 'string') {\r\n\t\t\t\tcurrentJson = parseCSSText(value);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tlet result = {},\r\n\t\t\t\tchanged = false;\r\n\t\t\r\n\t\t\tif (oldJson) {\r\n\t\t\t\tfor (let key in oldJson) {\r\n\t\t\t\t\tif (typeof currentJson == 'object' && !(key in currentJson)) {\r\n\t\t\t\t\t\tresult[key] = '';\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tfor (let ckey in currentJson) {\r\n\t\t\t\t\tif (currentJson[ckey] !== oldJson[ckey]) {\r\n\t\t\t\t\t\tresult[ckey] = currentJson[ckey];\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tnode.setStyles(result);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnode.setStyles(currentJson);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (name==='dangerouslySetInnerHTML') {\r\n\t\tif (value) node.innerHTML = value.__html || '';\r\n\t}\r\n\telse if (name[0]=='o' && name[1]=='n') {\r\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\r\n\t\tname = name.toLowerCase().substring(2);\r\n\t\tif (value) {\r\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\r\n\t\t}\r\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\r\n\t}\r\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\r\n\t\tsetProperty(node, name, value==null ? '' : value);\r\n\t\tif (value==null || value===false) node.removeAttribute(name);\r\n\t}\r\n\telse {\r\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\r\n\t\tif (value==null || value===false) {\r\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\r\n\t\t\telse node.removeAttribute(name);\r\n\t\t}\r\n\t\telse if (typeof value!=='function') {\r\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\r\n\t\t\telse node.setAttribute(name, value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/** Attempt to set a DOM property to the given value.\r\n *\tIE & FF throw for certain property-value combinations.\r\n */\r\nfunction setProperty(node, name, value) {\r\n\ttry {\r\n\t\tnode[name] = value;\r\n\t} catch (e) { }\r\n}\r\n\r\n\r\n/** Proxy an event to hooked event handlers\r\n *\t@private\r\n */\r\nfunction eventProxy(e) {\r\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\r\n}\r\n","import { ATTR_KEY } from '../constants';\r\nimport { isSameNodeType, isNamedNode } from './index';\r\nimport { createNode, setAccessor } from '../dom/index';\r\nimport options from '../options';\r\nimport { removeNode } from '../dom/index';\r\n\r\n/** Queue of components that have been mounted and are awaiting componentDidMount */\r\nexport const mounts = [];\r\n\r\n/** Diff recursion count, used to track the end of the diff cycle. */\r\nexport let diffLevel = 0;\r\n\r\n/** Global flag indicating if the diff is currently within an SVG */\r\nlet isSvgMode = false;\r\n\r\n/** Global flag indicating if the diff is performing hydration */\r\nlet hydrating = false;\r\n\r\n/** Invoke queued componentDidMount lifecycle methods */\r\nexport function flushMounts() {\r\n\tlet c;\r\n\twhile ((c=mounts.pop())) {\r\n\t\tif (options.afterMount) options.afterMount(c);\r\n\t\tif (c.componentDidMount) c.componentDidMount();\r\n\t\tif (c.installed) c.installed();\r\n\t}\r\n}\r\n\r\n\r\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\r\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\r\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\r\n *\t@returns {Element} dom\t\t\tThe created/mutated element\r\n *\t@private\r\n */\r\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\r\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\r\n\tif (!diffLevel++) {\r\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\r\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\r\n\r\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\r\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\r\n\t}\r\n\r\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\r\n\r\n\t// append the element if its a new parent\r\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\r\n\r\n\t// diffLevel being reduced to 0 means we're exiting the diff\r\n\tif (!--diffLevel) {\r\n\t\thydrating = false;\r\n\t\t// invoke queued componentDidMount lifecycle methods\r\n\t\tif (!componentRoot) flushMounts();\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\r\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\r\n\tlet out = dom,\r\n\t\tprevSvgMode = isSvgMode;\r\n\r\n\t// empty values (null, undefined, booleans) render as empty Text nodes\r\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\r\n\r\n\r\n\t// Fast case: Strings & Numbers create/update Text nodes.\r\n\tif (typeof vnode==='string' || typeof vnode==='number') {\r\n\r\n\t\t// update if it's already a Text node:\r\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\r\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\r\n\t\t\tif (dom.nodeValue!=vnode) {\r\n\t\t\t\tdom.nodeValue = vnode;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\r\n\t\t\tout = document.createTextNode(vnode);\r\n\t\t\tif (dom) {\r\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\r\n\t\t\t\trecollectNodeTree(dom, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout[ATTR_KEY] = true;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\r\n\t// If the VNode represents a Component, perform a component diff:\r\n\tlet vnodeName = vnode.nodeName;\r\n\t\r\n\r\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\r\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\r\n\r\n\r\n\t// If there's no existing element or it's the wrong type, create a new one:\r\n\tvnodeName = String(vnodeName);\r\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\r\n\t\tout = createNode(vnodeName, isSvgMode);\r\n\r\n\t\tif (dom) {\r\n\t\t\t// move children into the replacement node\r\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\r\n\r\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\r\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\r\n\r\n\t\t\t// recycle the old element (skips non-Element node types)\r\n\t\t\trecollectNodeTree(dom, true);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tlet fc = out.firstChild,\r\n\t\tprops = out[ATTR_KEY],\r\n\t\tvchildren = vnode.children;\r\n\r\n\tif (props==null) {\r\n\t\tprops = out[ATTR_KEY] = {};\r\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\r\n\t}\r\n\r\n\t// Optimization: fast-path for elements containing a single TextNode:\r\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\r\n\t\tif (fc.nodeValue!=vchildren[0]) {\r\n\t\t\tfc.nodeValue = vchildren[0];\r\n\t\t}\r\n\t}\r\n\t// otherwise, if there are existing or new children, diff them:\r\n\telse if (vchildren && vchildren.length || fc!=null) {\r\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\r\n\t}\r\n\r\n\r\n\t// Apply attributes/props from VNode to the DOM Element:\r\n\tdiffAttributes(out, vnode.attributes, props);\r\n\r\n\r\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\r\n\tisSvgMode = prevSvgMode;\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\r\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\r\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\r\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\r\n *\t@param {Boolean} mountAll\r\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\r\n */\r\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\r\n\tlet originalChildren = dom.childNodes,\r\n\t\tchildren = [],\r\n\t\tkeyed = {},\r\n\t\tkeyedLen = 0,\r\n\t\tmin = 0,\r\n\t\tlen = originalChildren.length,\r\n\t\tchildrenLen = 0,\r\n\t\tvlen = vchildren ? vchildren.length : 0,\r\n\t\tj, c, f, vchild, child;\r\n\r\n\t// Build up a map of keyed children and an Array of unkeyed children:\r\n\tif (len!==0) {\r\n\t\tfor (let i=0; i<len; i++) {\r\n\t\t\tlet child = originalChildren[i],\r\n\t\t\t\tprops = child[ATTR_KEY],\r\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\r\n\t\t\tif (key!=null) {\r\n\t\t\t\tkeyedLen++;\r\n\t\t\t\tkeyed[key] = child;\r\n\t\t\t}\r\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\r\n\t\t\t\tchildren[childrenLen++] = child;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (vlen!==0) {\r\n\t\tfor (let i=0; i<vlen; i++) {\r\n\t\t\tvchild = vchildren[i];\r\n\t\t\tchild = null;\r\n\r\n\t\t\t// attempt to find a node based on key matching\r\n\t\t\tlet key = vchild.key;\r\n\t\t\tif (key!=null) {\r\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\r\n\t\t\t\t\tchild = keyed[key];\r\n\t\t\t\t\tkeyed[key] = undefined;\r\n\t\t\t\t\tkeyedLen--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt to pluck a node of the same type from the existing children\r\n\t\t\telse if (!child && min<childrenLen) {\r\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\r\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\r\n\t\t\t\t\t\tchild = c;\r\n\t\t\t\t\t\tchildren[j] = undefined;\r\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\r\n\t\t\t\t\t\tif (j===min) min++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\r\n\t\t\tchild = idiff(child, vchild, context, mountAll);\r\n\r\n\t\t\tf = originalChildren[i];\r\n\t\t\tif (child && child!==dom && child!==f) {\r\n\t\t\t\tif (f==null) {\r\n\t\t\t\t\tdom.appendChild(child);\r\n\t\t\t\t}\r\n\t\t\t\telse if (child===f.nextSibling) {\r\n\t\t\t\t\tremoveNode(f);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdom.insertBefore(child, f);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// remove unused keyed children:\r\n\tif (keyedLen) {\r\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\r\n\t}\r\n\r\n\t// remove orphaned unkeyed children:\r\n\twhile (min<=childrenLen) {\r\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/** Recursively recycle (or just unmount) a node and its descendants.\r\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\r\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\r\n */\r\nexport function recollectNodeTree(node, unmountOnly) {\r\n\t\r\n\t// If the node's VNode had a ref function, invoke it with null here.\r\n\t// (this is part of the React spec, and smart for unsetting references)\r\n\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\r\n\r\n\tif (unmountOnly===false || node[ATTR_KEY]==null) {\r\n\t\tremoveNode(node);\r\n\t}\r\n\r\n\tremoveChildren(node);\r\n\r\n}\r\n\r\n\r\n/** Recollect/unmount all children.\r\n *\t- we use .lastChild here because it causes less reflow than .firstChild\r\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\r\n */\r\nexport function removeChildren(node) {\r\n\tnode = node.lastChild;\r\n\twhile (node) {\r\n\t\tlet next = node.previousSibling;\r\n\t\trecollectNodeTree(node, true);\r\n\t\tnode = next;\r\n\t}\r\n}\r\n\r\n\r\n/** Apply differences in attributes from a VNode to the given DOM Element.\r\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\r\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\r\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\r\n */\r\nfunction diffAttributes(dom, attrs, old) {\r\n\tlet name;\r\n\r\n\t// remove attributes no longer present on the vnode by setting them to undefined\r\n\tfor (name in old) {\r\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\r\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\r\n\t\t}\r\n\t}\r\n\r\n\t// add new & update changed attributes\r\n\tfor (name in attrs) {\r\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\r\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\r\n\t\t}\r\n\t}\r\n}\r\n","import { vdToDom, cssToDom, npn } from './util'\nimport { diff } from './vdom/diff';\n\n\nexport default class WeElement extends HTMLElement {\n    constructor() {\n        super()\n        this.props = {}\n        this.data = {}\n    }\n\n    connectedCallback() {\n        this.install()\n        const names = this.getAttributeNames()\n\n        names.forEach(name => {\n            this.props[npn(name)] = this.getAttribute(name)\n        })\n        this._vd = this.render()\n        this._css = this.css()\n\n        const shadowRoot = this.attachShadow({ mode: 'open' })\n\n        shadowRoot.appendChild(cssToDom(this._css))\n        this.host = vdToDom(this._vd)\n        shadowRoot.appendChild(this.host)\n\n        this.installed()\n    }\n\n    //chain transfer through this method\n    attributeChangedCallback(name, pre, current) {\n        this.props[npn(name)] = current\n        this.update()\n    }\n\n    disconnectedCallback() {\n        this.uninstall()\n    }\n\n    update() {\n        diff(this.host, this.render())\n    }\n\n    install() {\n\n    }\n\n    installed() {\n\n    }\n}\n","function getGlobal() {\r\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\r\n\t\tif (typeof self !== 'undefined') {\r\n\t\t\treturn self;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\treturn window;\r\n\t\t} else if (typeof global !== 'undefined') {\r\n\t\t\treturn global;\r\n\t\t}\r\n\t\treturn (function(){\r\n\t\t\treturn this;\r\n\t\t})();\r\n\t\t\r\n\t}\r\n\treturn global;\r\n}\r\n\r\n/** Global options\r\n *\t@public\r\n *\t@namespace options {Object}\r\n */\r\nexport default {\r\n\r\n\tscopedStyle: true,\r\n\t$store: null,\r\n\tisWeb: true,\r\n\tstaticStyleMapping: {},\r\n\tdoc: typeof document === 'object' ? document : null,\r\n\troot: getGlobal(),\r\n\t//styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\r\n\tstyleCache: []\r\n\t//componentChange(component, element) { },\r\n\t/** If `true`, `prop` changes trigger synchronous component updates.\r\n\t *\t@name syncComponentUpdates\r\n\t *\t@type Boolean\r\n\t *\t@default true\r\n\t */\r\n\t//syncComponentUpdates: true,\r\n\r\n\t/** Processes all created VNodes.\r\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\r\n\t */\r\n\t//vnode(vnode) { }\r\n\r\n\t/** Hook invoked after a component is mounted. */\r\n\t//afterMount(component) { },\r\n\r\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\r\n\t//afterUpdate(component) { }\r\n\r\n\t/** Hook invoked immediately before a component is unmounted. */\r\n\t// beforeUnmount(component) { }\r\n};\r\n","import { vdToDom } from './util'\r\n\r\nexport function render(vnode, parent) {\r\n\tparent = typeof parent === 'string' ? document.querySelector(parent) : parent\r\n\tparent.appendChild(vdToDom(vnode))\r\n} \r\n","import { h, h as createElement } from './h';\r\nimport options from './options';\r\nimport WeElement from  './we-element';\r\nimport { render } from './render';\r\n\r\nconst instances = [];\r\n\r\noptions.root.Omi = {\r\n\th,\r\n\tcreateElement,\r\n\tWeElement,\r\n\trender,\r\n\toptions,\r\n\tinstances\r\n};\r\n\r\noptions.root.Omi.version = '4.0.0';\r\n\r\nexport default {\r\n\th,\r\n\tcreateElement,\r\n\tWeElement,\r\n\trender,\r\n\toptions,\r\n\tinstances\r\n};\r\n\r\nexport {\r\n\th,\r\n\tcreateElement,\r\n\tWeElement,\r\n\trender,\r\n\toptions,\r\n\tinstances\r\n};\r\n"]}